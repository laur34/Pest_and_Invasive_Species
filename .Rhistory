# make the Orders into colnames:
colnames(dft) <- OrdersRN
head(dft)
## Plotting
# Make the row names in to a column:
library(data.table)
setDT(dft, keep.rownames = T)[]
#Melt it, with the rn column--the samples names--as the id:
dfm <- melt(dft, id='rn')
head(dfm)
head(dfm)
head(dfm,n=22)
# Specify order of factor levels of rn (samples names):
dfm$rn <- factor(dfm$rn, levels = dfm$rn[1:20])
dfm
library(ggplot2)
p <- ggplot2(dfm, aes(x=rn, y=value)) + geom_line(aes(color=variable),size=1) +
scale_color_manual(values=c("#00AFBB", "#E7B800")) + theme_minimal()
p <- ggplot(dfm, aes(x=rn, y=value)) + geom_line(aes(color=variable),size=1) +
scale_color_manual(values=c("#00AFBB", "#E7B800")) + theme_minimal()
p
dfm$variable
head(dft)
head(Ord)
# transpose the rest of it is as a data frame:
dft <- as.data.frame(t(Ord[,-1]))
head(dft)
# make the Orders into colnames:
colnames(dft) <- OrdersRN
head(dft)
## Plotting
# Make the row names in to a column:
library(data.table)
setDT(dft, keep.rownames = T)[]
#Melt it, with the rn column--the samples names--as the id:
dfm <- melt(dft, id='rn')
head(dfm)
dfm
dfm$rn
grepl("2016",dfm$rn)
#Plot a subset of the data:
ss <- subset(dfm, rgrepl("2016",dfm$rn))
#Plot a subset of the data:
ss <- subset(dfm, grepl("2016",dfm$rn))
ss
ss2 <- subset(dfm, grepl("2018", dfm$rn))
ss2
ggplot(data=ss, aes(x=rn,y=value))
ggplot(data=ss, aes(x=rn, y=value)) + geom_line(color="#00AFBB", size=2)
ggplot(data=ss, aes(x=rn, y=value, group=1)) + geom_line(color="#00AFBB", size=2)
#Plot a subset of the data:
ss <- subset(dfm, grepl("2016",dfm$rn))
ss
#Plot a subset of the data:
ss <- subset(dfm, grepl("2016",dfm$rn), variable="Diptera")
ss
#Plot a subset of the data:
ss <- subset(dfm, grepl("2016",dfm$rn), variable=="Diptera")
ss
#Plot a subset of the data:
ss <- subset(dfm, grepl("2016",dfm$rn))
ss
ss <- subset(ss, variable="Diptera")
ss
#Plot a subset of the data:
ss <- subset(dfm, variable="Diptera")
dfm
ss <- subset(ss, grepl("2016",ss$rn))
ss
#Plot a subset of the data:
ss <- subset(dfm, variable="Diptera")
ss
#Plot a subset of the data:
ss <- subset(dfm, variable=="Diptera")
ss
ss <- subset(ss, grepl("2016",ss$rn))
ss
ggplot(data=ss, aes(x=rn, y=value, group=1)) + geom_line(color="#00AFBB", size=2)
#Plot a subset of the data (2016, Diptera):
ssd <- subset(dfm, variable=="Diptera")
ss <- subset(ssd, grepl("2016",ssd$rn))
ggplot(data=ss, aes(x=rn, y=value, group=1)) + geom_line(color="#00AFBB", size=2)
#Plot 2018 Diptera:
ss2 <- subset(ssd, grepl("2018", ssd$rn))
p <- ggplot(data=ss, aes(x=rn, y=value, group=1)) + geom_line(color="#00AFBB", size=2)
ssd2016 <- subset(ssd, grepl("2016",ssd$rn))
p <- ggplot(data=sss2016, aes(x=rn, y=value, group=1)) + geom_line(color="#00AFBB", size=2)
p <- ggplot(data=ssd2016, aes(x=rn, y=value, group=1)) + geom_line(color="#00AFBB", size=2)
p
#Plot 2018 Diptera:
ssd2018 <- subset(ssd, grepl("2018", ssd$rn))
p + geom_line(data=ssd2018, color="orange")
p <- ggplot(data=ssd2016, aes(x=rn, y=value, group=1)) + theme_minimal() + geom_line(color="#00AFBB", size=2)
p
p + geom_line(data=ssd2018, color="#E7B800", size=2)
Collection <- c("May I", "May II", "June I", "June II", "July I", "July II", "Aug. I", "Aug. II", "Sep. I", "Sep. II")
p <- ggplot(data=ssd2016, aes(x=rn, y=value, group=1)) + geom_line(color="#00AFBB", size=2) +
theme_minimal() + theme(axis.text.x = element_text("Collection"))
#Plot a subset of the data (2016, Diptera):
ssd <- subset(dfm, variable=="Diptera")
ssd
ssd2016 <- subset(ssd, grepl("2016",ssd$rn))
ssd2016
Collection <- c("May I", "May II", "June I", "June II", "July I", "July II", "Aug. I", "Aug. II", "Sep. I", "Sep. II")
ggplot(data=ssd2016, aes(x=rn, y=value, group=1)) + geom_line(color="#00AFBB", size=2)
ssd2016$rn <- factor(ssd2016$rn, levels=ssd2016$rn[1:10])
ggplot(data=ssd2016, aes(x=rn, y=value, group=1)) + geom_line(color="#00AFBB", size=2)
p <- ggplot(data=ssd2016, aes(x=rn, y=value, group=1)) + geom_line(color="#00AFBB", size=2) +
theme_minimal() + theme(axis.text.x = element_text("Collection"))
p
p
p <- ggplot(data=ssd2016, aes(x=rn, y=value, group=1)) + geom_line(color="#00AFBB", size=2) +
theme(axis.text.x = element_blank())
p
p <- ggplot(data=ssd2016, aes(x=rn, y=value, group=1)) + geom_line(color="#00AFBB", size=2) +
theme(axis.text.x = element_blank()) + theme_minimal()
p
p <- ggplot(data=ssd2016, aes(x=rn, y=value, group=1)) + geom_line(color="#00AFBB", size=2) +
theme(axis.text.x = element_blank()) + theme_minimal()
p
p <- ggplot(data=ssd2016, aes(x=rn, y=value, group=1)) + geom_line(color="#00AFBB", size=2) +
theme(axis.text.x = element_blank())
p
p + geom_line(data=ssd2018, color="#E7B800", size=2)
ssd2018
ssd2018$rn <- factor(ssd2018$rn, levels=ssd2018$rn[1:10])
p <- ggplot(data=ssd2016, aes(x=rn, y=value, group=1)) + geom_line(color="#00AFBB", size=2) +
theme(axis.text.x = element_blank())
p + geom_line(data=ssd2018, color="#E7B800", size=2)
p + geom_line(data=ssd2018, color="#E7B800", size=2) +
scale_x_discrete(labels=Collection)
p <- ggplot(data=ssd2016, aes(x=rn, y=value, group=1)) + geom_line(color="#00AFBB", size=2) +
theme(axis.text.x = element_blank()) + scale_x_discrete(labels=Collection)
p + geom_line(data=ssd2018, color="#E7B800", size=2)
p <- ggplot(data=ssd2016, aes(x=rn, y=value, group=1)) + geom_line(color="#00AFBB", size=2) +
scale_x_discrete(labels=Collection)
p + geom_line(data=ssd2018, color="#E7B800", size=2)
p + geom_line(data=ssd2018, color="#E7B800", size=2) + theme(axis.text.x=element_blank())
head(dfm)
tail(dfm)
write.table(dfm, file="melted_orderdata.csv", sep=",", quote=F)
write.table(dfm, file="melted_orderdata.csv", sep=",", quote=F, row.names = T )
write.table(dfm, file="melted_orderdata.csv", sep=",", quote=F, row.names = F)
setwd("/media/laur/wdhdd1/allNPBW/")
data <- read.table("Reordered_for_pest_R_5_newFebNPBW_VL.csv", header=T, sep=",", stringsAsFactors = F)
data$Species[data$Species == ""] <- NA
data$Family[data$Family == ""] <- NA
data$Subfamily[data$Subfamily == ""] <- NA
data$Genus[data$Genus == ""] <- NA
data$BIN[data$BIN == ""] <- NA
data$Phylum[data$Phylum == ""] <- NA
data$Class[data$Class == ""] <- NA
data$Order[data$Order == ""] <- NA
#Subset to only the powder ones:
data <- data[, !grepl("Etoh", names(data))]
data <- data[, !grepl("semi", names(data))]
data <- data[, !grepl("filter", names(data))]
#data <- data[, !grepl("X2018_NPBWpowder", names(data))]
data <- data[, !grepl("_224", names(data))]
data <- data[, !grepl("_210", names(data))]
names(data)
bindata <- data[,c(9,14:ncol(data))]
#(getting rid of the column 1 name) ##combine by BIN to avoid duplicate row names.
bindata1 <- aggregate(bindata[,2:ncol(bindata)], by=list(bindata[,1]), FUN=sum )
#Transpose it for BiodiversityR package.
#(first getting rid of the column 1 name)
bindata2 <- bindata1[,-1]
rownames(bindata2) <- bindata1[,1]
tbindata2 <- data.frame(t(bindata2))
tbindata2
#Make it presence-absence (optional)
#tbindata2[,-1] = (tbindata2[,-1] !=0)*1    (oops, row names)
tbindata2 <- (tbindata2 != 0)*1
#Subset it to desired study year:
#bindata2016 <- cbind.data.frame(bindata$BIN, bindata[,which(grepl("2016", names(bindata)))])
bindata2016 <- tbindata2[which(grepl("2016", row.names(tbindata2))) ,]
bindata2018 <- tbindata2[which(grepl("2018", row.names(tbindata2))) ,]
#install.packages("vegan")
library(vegan)
#install.packages("betapart")
library(betapart)
#Group the trap (community) data by category:
length(grep("Jos", row.names(bindata2016)))
factor(c(rep("Igg",10),rep("Jos",10),rep("Sal", 10),rep("T1_02B",10),rep("T1_34B",10),rep("T1_52B",10),rep("T1_63B",10),rep("T3_50B",10),rep("T4_64B",10) ))
groups <- factor(c(rep(1,10),rep(2,10),rep(3, 10),rep(4,10),rep(5,10),rep(6,10),rep(7,10),rep(8,10),rep(9,10)), labels=c("Igg","Jos","Sal25", "T1_02B", "T1_34B","T1_52B", "T1_63B", "T3_50B", "T4_64B") )
## Jaccard and Sorensen indices do not consider the abundance of species.
#So, they can only use the presence/absence matrix.
#Try removing row names, and our data will be a presence-absense matrix.
row.names(bindata2016) <- NULL
dist <- beta.pair(bindata2016, index.family="jaccard")
bd <- betadisper(dist[[3]],groups)
plot(bd, main="Beta diversity 2016", segments=F)
install.packages("betapart")
library(betapart)
#Group the trap (community) data by category:
length(grep("Jos", row.names(bindata2016)))
factor(c(rep("Igg",10),rep("Jos",10),rep("Sal", 10),rep("T1_02B",10),rep("T1_34B",10),rep("T1_52B",10),rep("T1_63B",10),rep("T3_50B",10),rep("T4_64B",10) ))
groups <- factor(c(rep(1,10),rep(2,10),rep(3, 10),rep(4,10),rep(5,10),rep(6,10),rep(7,10),rep(8,10),rep(9,10)), labels=c("Igg","Jos","Sal25", "T1_02B", "T1_34B","T1_52B", "T1_63B", "T3_50B", "T4_64B") )
## Jaccard and Sorensen indices do not consider the abundance of species.
#So, they can only use the presence/absence matrix.
#Try removing row names, and our data will be a presence-absense matrix.
row.names(bindata2016) <- NULL
dist <- beta.pair(bindata2016, index.family="jaccard")
bd <- betadisper(dist[[3]],groups)
plot(bd, main="Beta diversity 2016", segments=F)
bd
dist
bindata2016
# Gauss-KrÃ¼ger coordinates are provided, so first convert to latitude and longitudes using a website.
# Load these into geosphere.
setwd("/media/laur/wdhdd1/Pest_and_Invasive_Species")
loc <- read.table("Trap_locations.csv", header=T, sep=",", stringsAsFactors=F)
loc
install.packages("geosphere")
#install.packages("geosphere")
library(geosphere)
# Create distance matrix:
mat <- distm(loc[,c('Kommazahlen_Laenge', 'Kommazahlen_Breite')])
mat
loc
# Create distance matrix:
dist_mat <- distm(loc[,c('Kommazahlen_Laenge', 'Kommazahlen_Breite')])
dist_mat
setwd("/media/laur/wdhdd1/allNPBW/")
data <- read.table("Reordered_for_pest_R_5_newFebNPBW_VL.csv", header=T, sep=",", stringsAsFactors = F)
data$Species[data$Species == ""] <- NA
data$Family[data$Family == ""] <- NA
data$Subfamily[data$Subfamily == ""] <- NA
data$Genus[data$Genus == ""] <- NA
data$BIN[data$BIN == ""] <- NA
data$Phylum[data$Phylum == ""] <- NA
data$Class[data$Class == ""] <- NA
data$Order[data$Order == ""] <- NA
#Subset to only the powder ones:
data <- data[, !grepl("Etoh", names(data))]
data <- data[, !grepl("semi", names(data))]
data <- data[, !grepl("filter", names(data))]
#data <- data[, !grepl("X2018_NPBWpowder", names(data))]
data <- data[, !grepl("_224", names(data))]
data <- data[, !grepl("_210", names(data))]
names(data)
bindata <- data[,c(9,14:ncol(data))]
#(getting rid of the column 1 name) ##combine by BIN to avoid duplicate row names.
bindata1 <- aggregate(bindata[,2:ncol(bindata)], by=list(bindata[,1]), FUN=sum )
#Transpose it for BiodiversityR package.
#(first getting rid of the column 1 name)
bindata2 <- bindata1[,-1]
rownames(bindata2) <- bindata1[,1]
tbindata2 <- data.frame(t(bindata2))
#Make it presence-absence (optional)
#tbindata2[,-1] = (tbindata2[,-1] !=0)*1    (oops, row names)
tbindata2 <- (tbindata2 != 0)*1
#Subset it to desired study year:
#bindata2016 <- cbind.data.frame(bindata$BIN, bindata[,which(grepl("2016", names(bindata)))])
bindata2016 <- tbindata2[which(grepl("2016", row.names(tbindata2))) ,]
bindata2018 <- tbindata2[which(grepl("2018", row.names(tbindata2))) ,]
bindata2016
#Group the trap (community) data by category:
length(grep("Jos", row.names(bindata2016)))
factor(c(rep("Igg",10),rep("Jos",10),rep("Sal", 10),rep("T1_02B",10),rep("T1_34B",10),rep("T1_52B",10),rep("T1_63B",10),rep("T3_50B",10),rep("T4_64B",10) ))
groups <- factor(c(rep(1,10),rep(2,10),rep(3, 10),rep(4,10),rep(5,10),rep(6,10),rep(7,10),rep(8,10),rep(9,10)), labels=c("Igg","Jos","Sal25", "T1_02B", "T1_34B","T1_52B", "T1_63B", "T3_50B", "T4_64B") )
## Jaccard and Sorensen indices do not consider the abundance of species.
#So, they can only use the presence/absence matrix.
#Try removing row names, and our data will be a presence-absense matrix.
row.names(bindata2016) <- NULL
dist <- beta.pair(bindata2016, index.family="jaccard")
dist
bd <- betadisper(dist[[3]],groups)
bd
dist$beta.jac
dist
bindata2016
bd
bindata2016
class(bindata2016)
bindata
bindata1
bindata2
setwd("/media/laur/wdhdd1/allNPBW/")
data <- read.table("Reordered_for_pest_R_5_newFebNPBW_VL.csv", header=T, sep=",", stringsAsFactors = F)
data$Species[data$Species == ""] <- NA
data$Family[data$Family == ""] <- NA
data$Subfamily[data$Subfamily == ""] <- NA
data$Genus[data$Genus == ""] <- NA
data$BIN[data$BIN == ""] <- NA
data$Phylum[data$Phylum == ""] <- NA
data$Class[data$Class == ""] <- NA
data$Order[data$Order == ""] <- NA
#Subset to only the powder ones:
data <- data[, !grepl("Etoh", names(data))]
data <- data[, !grepl("semi", names(data))]
data <- data[, !grepl("filter", names(data))]
#data <- data[, !grepl("X2018_NPBWpowder", names(data))]
data <- data[, !grepl("_224", names(data))]
data <- data[, !grepl("_210", names(data))]
names(data)
bindata <- data[,c(9,14:ncol(data))]
#(getting rid of the column 1 name) ##combine by BIN to avoid duplicate row names.
bindata1 <- aggregate(bindata[,2:ncol(bindata)], by=list(bindata[,1]), FUN=sum )
#Transpose it for BiodiversityR package.
#(first getting rid of the column 1 name)
bindata2 <- bindata1[,-1]
bindata2
rownames(bindata2) <- bindata1[,1]
bindata2
bindata2_2016 <- bindata2[, which(grepl("2016", names(bindata2)))]
bindata2_2016
#Subset it to desired study year:
#bindata2016 <- cbind.data.frame(bindata$BIN, bindata[,which(grepl("2016", names(bindata)))])
bindata2016 <- tbindata2[which(grepl("2016", row.names(tbindata2))) ,]
bindata2018 <- tbindata2[which(grepl("2018", row.names(tbindata2))) ,]
#Group the trap (community) data by category:
length(grep("Jos", row.names(bindata2016)))
factor(c(rep("Igg",10),rep("Jos",10),rep("Sal", 10),rep("T1_02B",10),rep("T1_34B",10),rep("T1_52B",10),rep("T1_63B",10),rep("T3_50B",10),rep("T4_64B",10) ))
groups <- factor(c(rep(1,10),rep(2,10),rep(3, 10),rep(4,10),rep(5,10),rep(6,10),rep(7,10),rep(8,10),rep(9,10)), labels=c("Igg","Jos","Sal25", "T1_02B", "T1_34B","T1_52B", "T1_63B", "T3_50B", "T4_64B") )
row.names(bindata2016) <- NULL
bindata2016
dist <- beta.pair(bindata2016, index.family="jaccard")
dist
bd <- betadisper(dist[[3]],groups)
plot(bd, main="Beta diversity 2016", segments=F)
bindata2016
dist
bd
bindata2016
tbindata2
bindata2_2016
bindata2_2018 <- bindata2[, which(grepl("2018", names(bindata2)))]
bindata2_2018
bindata2_2016
bindata2016
setwd("/media/laur/wdhdd1/allNPBW/")
data <- read.table("Reordered_for_pest_R_5_newFebNPBW_VL.csv", header=T, sep=",", stringsAsFactors = F)
data$Species[data$Species == ""] <- NA
data$Family[data$Family == ""] <- NA
data$Subfamily[data$Subfamily == ""] <- NA
data$Genus[data$Genus == ""] <- NA
data$BIN[data$BIN == ""] <- NA
data$Phylum[data$Phylum == ""] <- NA
data$Class[data$Class == ""] <- NA
data$Order[data$Order == ""] <- NA
#Subset to only the powder ones:
data <- data[, !grepl("Etoh", names(data))]
data <- data[, !grepl("semi", names(data))]
data <- data[, !grepl("filter", names(data))]
#data <- data[, !grepl("X2018_NPBWpowder", names(data))]
data <- data[, !grepl("_224", names(data))]
data <- data[, !grepl("_210", names(data))]
names(data)
bindata <- data[,c(9,14:ncol(data))]
#(getting rid of the column 1 name) ##combine by BIN to avoid duplicate row names.
bindata1 <- aggregate(bindata[,2:ncol(bindata)], by=list(bindata[,1]), FUN=sum )
#Transpose it for BiodiversityR package.
#(first getting rid of the column 1 name)
bindata2 <- bindata1[,-1]
rownames(bindata2) <- bindata1[,1]
bindata2
tbindata2 <- data.frame(t(bindata2))
#Make it presence-absence (optional)
tbindata2 <- (tbindata2 != 0)*1
#Subset it to desired study year:
#bindata2016 <- cbind.data.frame(bindata$BIN, bindata[,which(grepl("2016", names(bindata)))])
bindata2016 <- tbindata2[which(grepl("2016", row.names(tbindata2))) ,]
bindata2018 <- tbindata2[which(grepl("2018", row.names(tbindata2))) ,]
bindata2016
#Group the trap (community) data by category:
length(grep("Jos", row.names(bindata2016)))
factor(c(rep("Igg",10),rep("Jos",10),rep("Sal", 10),rep("T1_02B",10),rep("T1_34B",10),rep("T1_52B",10),rep("T1_63B",10),rep("T3_50B",10),rep("T4_64B",10) ))
groups <- factor(c(rep(1,10),rep(2,10),rep(3, 10),rep(4,10),rep(5,10),rep(6,10),rep(7,10),rep(8,10),rep(9,10)), labels=c("Igg","Jos","Sal25", "T1_02B", "T1_34B","T1_52B", "T1_63B", "T3_50B", "T4_64B") )
gropus
groups
bindata2016
class(bindata2016)
dim(bindata2016)
bindata2016[12,5]
bindata2016[1:12,1:5]
factor(c(rep("Igg",10),rep("Jos",10),rep("Sal", 10),rep("T1_02B",10),rep("T1_34B",10),rep("T1_52B",10),rep("T1_63B",10),rep("T3_50B",10),rep("T4_64B",10) ))
groups
bindata2016$groups <- groups
bindata2016
bindata2016
#Subset it to desired study year:
#bindata2016 <- cbind.data.frame(bindata$BIN, bindata[,which(grepl("2016", names(bindata)))])
bindata2016 <- tbindata2[which(grepl("2016", row.names(tbindata2))) ,]
bindata2018 <- tbindata2[which(grepl("2018", row.names(tbindata2))) ,]
bindata2016
as.data.frame(bindata2016)
as.data.frame(bindata2016)
as.list(groups)
l <- c(rep(1,10),rep(2,10),rep(3, 10),rep(4,10),rep(5,10),rep(6,10),rep(7,10),rep(8,10),rep(9,10)), labels=c("Igg","Jos","Sal25", "T1_02B", "T1_34B","T1_52B", "T1_63B", "T3_50B", "T4_64B")
class(groups)
as.vector(groups)
as.list(as.vector(groups))
as.data.frame(bindata2016)
dat2016 <- as.data.frame(bindata2016)
dat2016
groups
dat2016$trap <- groups
dat2016
tail(dat2016)
dim(dat2016)
ncol(dat2016)
aggregate(dat2016[1:151], by=list(groups), FUN=sum )
as.vector(groups)
aggregate(dat2016[1:151], by=list(as.vector(groups)), FUN=sum )
dat2016[1:151]
aggregate(dat2016[1:150], by=list(as.vector(groups)), FUN=sum )
d <- vegdist(in_2016, method="jaccard")
in_2016 <- aggregate(dat2016[1:150], by=list(as.vector(groups)), FUN=sum )
d <- vegdist(in_2016, method="jaccard")
in_2016
in_2016
str(in_2016)
in_2016_2 <- in_2016[,-1]
rownames(in_2016_2) <- in_2016[,1]
in_2016_2
d <- vegdist(in_2016, method="jaccard")
d <- vegdist(in_2016_2, method="jaccard")
d
d_2016 <- vegdist(in_2016_2, method="jaccard")
d_2016
### Perform Mantel test:
install.packages("ade4")
library(ade4)
mantel.rtest(dist_mat, d_2016, nrepet = 99)
d_2016
dist_mat
d_2016 <- vegdist(in_2016_2, method=NA)
d_2016 <- vegdist(in_2016_2)
d_2016
d_2016 <- vegdist(in_2016_2, method="jaccard")
class(d_3016)
class(d_2016)
class(dist_mat)
# Need class "dist"
as.dist(dist_mat)
# Need class "dist"
dist_mat <- as.dist(dist_mat)
mantel.rtest(dist_mat, d_2016, nrepet = 99)
d_2016
dist_mat
loc
setwd("/media/laur/wdhdd1/allNPBW/")
data <- read.table("Reordered_for_pest_R_5_newFebNPBW_VL.csv", header=T, sep=",", stringsAsFactors = F)
data$Species[data$Species == ""] <- NA
data$Family[data$Family == ""] <- NA
data$Subfamily[data$Subfamily == ""] <- NA
data$Genus[data$Genus == ""] <- NA
data$BIN[data$BIN == ""] <- NA
data$Phylum[data$Phylum == ""] <- NA
data$Class[data$Class == ""] <- NA
data$Order[data$Order == ""] <- NA
#Subset to only the powder ones:
data <- data[, !grepl("Etoh", names(data))]
data <- data[, !grepl("semi", names(data))]
data <- data[, !grepl("filter", names(data))]
data <- data[, !grepl("_224", names(data))]
data <- data[, !grepl("_210", names(data))]
names(data)
bindata <- data[,c(9,14:ncol(data))]
#(getting rid of the column 1 name) ##combine by BIN to avoid duplicate row names.
bindata1 <- aggregate(bindata[,2:ncol(bindata)], by=list(bindata[,1]), FUN=sum )
#Transpose it for BiodiversityR package.
#(first get rid of the column 1 name)
bindata2 <- bindata1[,-1]
rownames(bindata2) <- bindata1[,1]
bindata2
tbindata2 <- data.frame(t(bindata2))
#Make it presence-absence (optional)
tbindata2 <- (tbindata2 != 0)*1
#Subset it to desired study year:
#bindata2016 <- cbind.data.frame(bindata$BIN, bindata[,which(grepl("2016", names(bindata)))])
bindata2016 <- tbindata2[which(grepl("2016", row.names(tbindata2))) ,]
bindata2018 <- tbindata2[which(grepl("2018", row.names(tbindata2))) ,]
library(vegan)
#install.packages("betapart")
library(betapart)
#Group the trap (community) data by category:
length(grep("Jos", row.names(bindata2016)))
factor(c(rep("Igg",10),rep("Jos",10),rep("Sal", 10),rep("T1_02B",10),rep("T1_34B",10),rep("T1_52B",10),rep("T1_63B",10),rep("T3_50B",10),rep("T4_64B",10) ))
groups <- factor(c(rep(1,10),rep(2,10),rep(3, 10),rep(4,10),rep(5,10),rep(6,10),rep(7,10),rep(8,10),rep(9,10)), labels=c("Igg","Jos","Sal25", "T1_02B", "T1_34B","T1_52B", "T1_63B", "T3_50B", "T4_64B") )
head(bindata2016)
#Create the matrix, first aggregating samples into traps by sum:
dat2016 <- as.data.frame(bindata2016)
dat2016$trap <- groups
in_2016 <- aggregate(dat2016[1:150], by=list(as.vector(groups)), FUN=sum )
in_2016_2 <- in_2016[,-1]
rownames(in_2016_2) <- in_2016[,1]
in_2016_2
d_2016 <- vegdist(in_2016_2, method="jaccard")
### Create a distance matrix of the spatial distances between traps
# Gauss-KrÃ¼ger coordinates are provided, so first convert to latitude and longitudes using a website.
# Load these into geosphere.
setwd("/media/laur/wdhdd1/Pest_and_Invasive_Species")
loc <- read.table("Trap_locations.csv", header=T, sep=",", stringsAsFactors=F)
loc
# Create distance matrix:
dist_mat <- distm(loc[,c('Kommazahlen_Laenge', 'Kommazahlen_Breite')])
# Need class "dist"
dist_mat <- as.dist(dist_mat)
### Create a second matrix, consisting of the distances between measured outcomes at the given points (traps)
# which in this case is vegdist with method "jaccard"
# if this method is ok, and not using binary=T.
# run dissimilarity_indices.R
###
d_2016
### Perform Mantel test:
install.packages("ade4")
### Perform Mantel test:
#install.packages("ade4")
library(ade4)
mantel.rtest(dist_mat, d_2016, nrepet = 99)
